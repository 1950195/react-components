{"version":3,"file":"main.ca676639b6f138af2e20.bundle.js","sources":["webpack:///./src/Button/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Button as BSButton } from 'reactstrap';\nimport styled from 'styled-components';\n\nconst CustomButton = styled(BSButton)`\n  &.btn-raised {\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n                rgba(0, 0, 0, 0.14) 0px 2px 2px 0px,\n                rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n    &:active {\n      box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 5px -3px,\n                  rgba(0, 0, 0, 0.14) 0px 8px 10px 1px,\n                  rgba(0, 0, 0, 0.12) 0px 3px 14px 2px;\n    }\n\n    &:hover, &:focus {\n      box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px,\n                  rgba(0, 0, 0, 0.14) 0px 4px 5px 0px,\n                  rgba(0, 0, 0, 0.12) 0px 1px 10px 0px;\n    }\n  }\n\n  ${({ dashed }) => dashed && `\n    color: #6c757d;\n    border-color: #6c757d;\n    border-style: dashed;\n    background-color: #fff;\n\n    &:active, &:hover, &:focus {\n      color: #fff;\n      background-color: #6c757d;\n    }\n\n    &:disabled {\n      color: #6c757d;\n      background-color: #fff;\n    }\n  }`}\n`;\n\nexport interface IButtonProps {\n  type?: 'primary' | 'raised' | 'linking';\n  size?: 'lg' | 'sm';\n  outlined?: boolean;\n  dashed?: boolean;\n  disabled?: boolean;\n  onClick?: ((event: React.MouseEvent<any, MouseEvent>) => void) | undefined;\n  children: any;\n}\n\nexport const Button = ({\n  type,\n  size,\n  outlined,\n  dashed,\n  disabled,\n  onClick,\n  children,\n}: IButtonProps) => {\n  let colorProp;\n\n  switch (type) {\n    case undefined:\n      colorProp = 'secondary';\n      break;\n    case 'raised':\n      colorProp = 'raised';\n      break;\n    case 'linking':\n      colorProp = 'link';\n      break;\n    default:\n      colorProp = type;\n  }\n\n  return (\n    <CustomButton\n      {...{\n        disabled,\n        color: colorProp,\n        outline: outlined,\n        dashed,\n        size,\n        onClick,\n      }}\n    >\n      {children}\n    </CustomButton>\n  );\n};\n\nexport default Button;\ntry {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": { \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"raised\\\" | \\\"linking\\\"\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"lg\\\" | \\\"sm\\\"\" } }, \"outlined\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"outlined\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"dashed\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"dashed\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"disabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClick\", \"required\": false, \"type\": { \"name\": \"(event: any) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/Button/index.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"src/Button/index.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":"AAIA","sourceRoot":""}